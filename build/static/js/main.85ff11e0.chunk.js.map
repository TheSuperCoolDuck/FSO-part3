{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","request","data","newObject","post","id","delete","put","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Filter","searchTerm","handleSearchTermChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","PersonLine","person","handleDeletePerson","name","number","onClick","Persons","filteredPersons","map","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchTerm","setMessage","useEffect","personService","initialPersons","displayNotification","setTimeout","event","target","preventDefault","personObject","foundPerson","find","p","window","confirm","returnedPerson","catch","error","filter","concat","response","toUpperCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85ff11e0.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll=()=>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(request =>request.data)\r\n}\r\n\r\nconst create = (newObject) =>{\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(request =>request.data)\r\n}\r\n\r\nconst deletePerson = (id) =>{\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request\r\n}\r\n\r\nconst update = (id,newObject) =>{\r\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\r\n    return request.then(request=>request.data)\r\n}\r\n\r\nexport default {getAll,create,deletePerson,update}","import React, {useState, useEffect} from 'react'\nimport personService from './services/persons'\n\nconst Notification=({message})=>{\n  const notificationStyle ={\n    color:'red',\n    background:'lightgray',\n    fontSize:20,\n    borderStyle:'solid',\n    borderRadius:5,\n    padding:10,\n    marginBottom:10\n  }\n\n  if(message===null){\n    return null\n  }\n\n  return(\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst Filter = ({searchTerm, handleSearchTermChange})=>{\n  return(\n    <form>\n      <div>\n        filter shown with <input value={searchTerm} onChange={handleSearchTermChange}/>\n  </  div>\n  </form>\n  )\n}\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange})=>{\n  return(\n    <form onSubmit={addPerson}>\n      <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst PersonLine = ({person, handleDeletePerson})=>{\n  return(\n    <div>\n      {person.name} {person.number}\n      <button onClick = {()=>handleDeletePerson(person)}>delete</button>\n    </div>\n  )\n}\n\nconst Persons = ({filteredPersons,handleDeletePerson})=> {\n  return(\n  filteredPersons().map(person=>\n  <PersonLine key={person.name} person={person} handleDeletePerson={handleDeletePerson}/>\n  ))\n}\n\n\nconst App = ()=> {\n  const[persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(()=>{\n    personService\n      .getAll()\n      .then(initialPersons=>{\n      setPersons(initialPersons)\n    })\n  },[])\n\n  const displayNotification = (message)=>{\n    setMessage(message)\n\n    setTimeout(()=>{\n      setMessage(null)\n    },2000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    \n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const foundPerson = persons.find(p=>p.name===personObject.name)\n\n    if(foundPerson){\n      const confirm = window.confirm(`${personObject.name} is already added on phonebook, replace the old number with a new one?`)\n      if(confirm){\n        personService\n          .update(foundPerson.id,personObject)\n          .then(returnedPerson=>{\n            setPersons(persons.map(person=>person.id!==returnedPerson.id?person:returnedPerson))\n            displayNotification(`Updated ${returnedPerson.name}`)\n          })\n          .catch(error=>{\n            displayNotification(`Information of ${personObject.name} has already been deleted`)\n            setPersons(persons.filter(p=>p.id!==foundPerson.id))\n          })\n        }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson=>{\n          setPersons(persons.concat(returnedPerson))\n          displayNotification(`Added ${returnedPerson.name}`)\n        })\n        .catch(error=>{\n          displayNotification(error.response.data.error)\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n  const filteredPersons=()=>{\n    if(searchTerm===''){\n      return persons\n    } else {\n      return persons.filter(person=>person.name.toUpperCase().includes(searchTerm.toUpperCase()))\n    }\n  }\n\n  const handleSearchTermChange = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) =>{\n    setNewNumber(event.target.value)\n  }\n\n  const handleDeletePerson=(person)=>{\n    const confirm = window.confirm(`Delete ${person.name}?`)\n    if(confirm){\n      personService\n        .deletePerson(person.id)\n        .then(\n          setPersons(persons.filter(p=>p.id!==person.id))\n      )\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter searchTerm={searchTerm} handleSearchTermChange={handleSearchTermChange}/>\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons filteredPersons={filteredPersons} handleDeletePerson={handleDeletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}